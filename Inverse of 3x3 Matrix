#include<stdio.h>
#define SIZE 3
void main()
{
	int arr[SIZE][SIZE], det, inv[SIZE][SIZE];
	printf("Enter values for the 3x3 matrix: ");
	for (int i = 0; i < SIZE; i++)
		for (int j = 0; j < SIZE; j++)
			scanf_s("%d", &arr[i][j]);
	printf("The original matrix is: ");
	for (int i = 0; i < SIZE; i++)
	{
		printf("\n");
		for (int j = 0; j < SIZE; j++)
			printf("%d\t", arr[i][j]);
	}
	//calculating determinant
	det = arr[0][0] * (arr[2][2] * arr[1][1] - arr[1][2] * arr[2][1]) - arr[0][1] * (arr[1][0] * arr[2][2] - arr[1][2] * arr[2][0]) + arr[0][2] * (arr[1][0] * arr[2][1] - arr[1][1] * arr[2][0]);
	if (det == 0)
		printf("\n\nThe determinant of the matrix is 0 so inverse does not exist.\n");
	else
	{
		//combining formula from taking cofactors, transpose and adjoint
		printf("\n\nThe determinant of the matrix is %d.\n", det);
		inv[0][0] = arr[1][1] * arr[2][2] - arr[1][2] * arr[2][1];
		inv[0][1] = (arr[0][1] * arr[2][2] - arr[0][2] * arr[2][1]) * -1;
		inv[0][2] = arr[0][1] * arr[1][2] - arr[0][2] * arr[1][1];
		inv[1][0] = (arr[1][0] * arr[2][2] - arr[1][2] * arr[2][0]) * -1;
		inv[1][1] = arr[0][0] * arr[2][2] - arr[0][2] * arr[2][0];
		inv[1][2] = (arr[0][0] * arr[1][2] - arr[0][2] * arr[1][0]) * -1;
		inv[2][0] = arr[1][0] * arr[2][1] - arr[1][1] * arr[2][0];
		inv[2][1] = (arr[0][0] * arr[2][1] - arr[0][1] * arr[2][0]) * -1;
		inv[2][2] = arr[0][0] * arr[1][1] - arr[0][1] * arr[1][0];
		printf("\nThe inverse of the matrix is: ");
		for (int i = 0; i < SIZE; i++)
		{
			printf("\n");
			for (int j = 0; j < SIZE; j++)
					printf("%.1f\t", (inv[i][j]) / (float)det); //adjoint/determinant
		}
	}
